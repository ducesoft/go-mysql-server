// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateAlterTableId-4]
	_ = x[validateExprSemId-5]
	_ = x[resolveVariablesId-6]
	_ = x[resolveNamedWindowsId-7]
	_ = x[resolveSetVariablesId-8]
	_ = x[resolveViewsId-9]
	_ = x[liftCtesId-10]
	_ = x[resolveCtesId-11]
	_ = x[liftRecursiveCtesId-12]
	_ = x[resolveDatabasesId-13]
	_ = x[resolveTablesId-14]
	_ = x[loadStoredProceduresId-15]
	_ = x[validateDropTablesId-16]
	_ = x[pruneDropTablesId-17]
	_ = x[setTargetSchemasId-18]
	_ = x[resolveCreateLikeId-19]
	_ = x[parseColumnDefaultsId-20]
	_ = x[resolveDropConstraintId-21]
	_ = x[validateDropConstraintId-22]
	_ = x[loadCheckConstraintsId-23]
	_ = x[assignCatalogId-24]
	_ = x[resolveAnalyzeTablesId-25]
	_ = x[resolveCreateSelectId-26]
	_ = x[resolveSubqueriesId-27]
	_ = x[setViewTargetSchemaId-28]
	_ = x[resolveUnionsId-29]
	_ = x[resolveDescribeQueryId-30]
	_ = x[checkUniqueTableNamesId-31]
	_ = x[resolveTableFunctionsId-32]
	_ = x[resolveDeclarationsId-33]
	_ = x[resolveColumnDefaultsId-34]
	_ = x[validateColumnDefaultsId-35]
	_ = x[validateCreateTriggerId-36]
	_ = x[validateCreateProcedureId-37]
	_ = x[resolveCreateProcedureId-38]
	_ = x[loadInfoSchemaId-39]
	_ = x[validateReadOnlyDatabaseId-40]
	_ = x[validateReadOnlyTransactionId-41]
	_ = x[validateDatabaseSetId-42]
	_ = x[validatePrivilegesId-43]
	_ = x[reresolveTablesId-44]
	_ = x[setInsertColumnsId-45]
	_ = x[validateJoinComplexityId-46]
	_ = x[applyBinlogReplicaControllerId-47]
	_ = x[applyEventSchedulerId-48]
	_ = x[resolveUsingJoinsId-49]
	_ = x[resolveOrderbyLiteralsId-50]
	_ = x[resolveFunctionsId-51]
	_ = x[flattenTableAliasesId-52]
	_ = x[pushdownSortId-53]
	_ = x[pushdownGroupbyAliasesId-54]
	_ = x[pushdownSubqueryAliasFiltersId-55]
	_ = x[qualifyColumnsId-56]
	_ = x[resolveColumnsId-57]
	_ = x[validateCheckConstraintId-58]
	_ = x[resolveBarewordSetVariablesId-59]
	_ = x[replaceCountStarId-60]
	_ = x[expandStarsId-61]
	_ = x[transposeRightJoinsId-62]
	_ = x[resolveHavingId-63]
	_ = x[mergeUnionSchemasId-64]
	_ = x[flattenAggregationExprsId-65]
	_ = x[reorderProjectionId-66]
	_ = x[resolveSubqueryExprsId-67]
	_ = x[replaceCrossJoinsId-68]
	_ = x[moveJoinCondsToFilterId-69]
	_ = x[evalFilterId-70]
	_ = x[optimizeDistinctId-71]
	_ = x[hoistOutOfScopeFiltersId-72]
	_ = x[transformJoinApplyId-73]
	_ = x[hoistSelectExistsId-74]
	_ = x[finalizeSubqueriesId-75]
	_ = x[finalizeUnionsId-76]
	_ = x[loadTriggersId-77]
	_ = x[loadEventsId-78]
	_ = x[processTruncateId-79]
	_ = x[resolveAlterColumnId-80]
	_ = x[resolveGeneratorsId-81]
	_ = x[removeUnnecessaryConvertsId-82]
	_ = x[pruneColumnsId-83]
	_ = x[stripTableNameInDefaultsId-84]
	_ = x[foldEmptyJoinsId-85]
	_ = x[optimizeJoinsId-86]
	_ = x[generateIndexScansId-87]
	_ = x[matchAgainstId-88]
	_ = x[pushFiltersId-89]
	_ = x[subqueryIndexesId-90]
	_ = x[pruneTablesId-91]
	_ = x[fixupAuxiliaryExprsId-92]
	_ = x[assignExecIndexesId-93]
	_ = x[inlineSubqueryAliasRefsId-94]
	_ = x[eraseProjectionId-95]
	_ = x[replaceSortPkId-96]
	_ = x[insertTopNId-97]
	_ = x[applyHashInId-98]
	_ = x[resolveInsertRowsId-99]
	_ = x[resolvePreparedInsertId-100]
	_ = x[applyTriggersId-101]
	_ = x[applyProceduresId-102]
	_ = x[assignRoutinesId-103]
	_ = x[modifyUpdateExprsForJoinId-104]
	_ = x[applyRowUpdateAccumulatorsId-105]
	_ = x[wrapWithRollbackId-106]
	_ = x[applyFKsId-107]
	_ = x[validateResolvedId-108]
	_ = x[validateOrderById-109]
	_ = x[validateGroupById-110]
	_ = x[validateSchemaSourceId-111]
	_ = x[validateIndexCreationId-112]
	_ = x[validateOperandsId-113]
	_ = x[validateCaseResultTypesId-114]
	_ = x[validateIntervalUsageId-115]
	_ = x[validateExplodeUsageId-116]
	_ = x[validateSubqueryColumnsId-117]
	_ = x[validateUnionSchemasMatchId-118]
	_ = x[validateAggregationsId-119]
	_ = x[validateDeleteFromId-120]
	_ = x[cacheSubqueryResultsId-121]
	_ = x[cacheSubqueryAliasesInJoinsId-122]
	_ = x[AutocommitId-123]
	_ = x[TrackProcessId-124]
	_ = x[parallelizeId-125]
	_ = x[clearWarningsId-126]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateAlterTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerresolveUsingJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScansmatchAgainstpushFilterssubqueryIndexespruneTablesfixupAuxiliaryExprsassignExecIndexesinlineSubqueryAliasRefseraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 105, 120, 136, 155, 174, 186, 194, 205, 222, 238, 251, 271, 289, 304, 320, 337, 356, 377, 399, 419, 432, 452, 471, 488, 507, 520, 540, 561, 582, 601, 622, 644, 665, 688, 710, 724, 748, 775, 794, 812, 827, 843, 865, 893, 912, 929, 951, 967, 986, 998, 1020, 1048, 1062, 1076, 1099, 1126, 1142, 1153, 1172, 1185, 1202, 1225, 1242, 1262, 1279, 1300, 1310, 1326, 1348, 1366, 1383, 1401, 1415, 1427, 1437, 1452, 1470, 1487, 1512, 1524, 1557, 1571, 1584, 1602, 1614, 1625, 1640, 1651, 1670, 1687, 1710, 1725, 1738, 1748, 1759, 1776, 1797, 1810, 1825, 1839, 1863, 1889, 1906, 1914, 1930, 1945, 1960, 1980, 2001, 2017, 2040, 2061, 2081, 2104, 2129, 2149, 2167, 2187, 2214, 2231, 2243, 2254, 2267}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
